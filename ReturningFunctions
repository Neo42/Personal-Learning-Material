//capturing(pull out variable from)
let show = () => {
    let x = 1
    return () => console.log(x)
  } //console.log(x)
show()()//1

/*USE CASE:PRIVATE VARIABLE FEATURE
Here is a leaky counter object.
let counter = {
  count: 0,
  add1: this.count += 1
  currentValue: return this.count
}*/
counter.count = 9000; SHIT!

//A funtional counter with private variables
let createCounter = () =>{
let count = 0
return {
	increment:()=>count+=1,
  currentValue:()=>count
  }
}

let myCounter = createCounter()
myCounter.increment()
console.log(myCounter.currentValue())//1
myCounter.count = 9000//myCounter does not have a property called "count". AND BOO YA!
